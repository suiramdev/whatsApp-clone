{"version":3,"sources":["services/firebase.js","screens/Register.js","screens/LogIn.js","components/Contact.js","components/SideBar.js","components/Conversation.js","screens/Main.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Register","props","state","emailInput","React","createRef","passwordInput","confirmPasswordInput","handleSubmit","bind","generateID","Math","floor","random","event","preventDefault","this","current","value","auth","createUserWithEmailAndPassword","then","setState","success","collection","doc","currentUser","uid","set","id","email","catch","error","message","className","onSubmit","WhatsApp","Alert","severity","AlternateEmail","ref","type","placeholder","required","Lock","to","Component","LogIn","signInWithEmailAndPassword","div","initial","x","animate","transition","duration","ArrowBack","href","Contact","select","history","push","onClick","Avatar","style","marginLeft","name","useHistory","SideBar","newContactName","newContactID","searchBar","newContact","searchContact","contacts","get","querySnapshot","forEach","data","signOut","contactName","contactID","where","parseInt","empty","undefined","docs","user","reason","document","querySelectorAll","element","querySelector","innerHTML","toLowerCase","includes","classList","remove","add","path","disconnect","ExitToApp","padding","Face","Dialpad","Save","onChange","map","contact","key","Add","Conversation","chatBox","conversationId","conversation","sendMessage","match","params","goBack","onSnapshot","scrollTo","scrollHeight","messages","content","from","date","Date","now","toLocaleTimeString","Main","component","App","onAuthStateChanged","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.6798012d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD-T3lWYdPadfLTy0kHAgZjRsacvDpDklU\",\r\n    authDomain: \"whatsapp-clone-9fd22.firebaseapp.com\",\r\n    databaseURL: \"https://whatsapp-clone-9fd22.firebaseio.com\",\r\n    projectId: \"whatsapp-clone-9fd22\",\r\n    storageBucket: \"whatsapp-clone-9fd22.appspot.com\",\r\n    messagingSenderId: \"1017784785482\",\r\n    appId: \"1:1017784785482:web:6c34cb077157fff88c24b3\",\r\n    measurementId: \"G-93EWC01NLS\"\r\n}\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\nexport const firestore = firebase.firestore();","import React, { Component } from 'react';\r\nimport './Register.scss';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { AlternateEmail, Lock, WhatsApp } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase, { firestore } from 'services/firebase';\r\n\r\nclass Register extends Component {\r\n    state = {}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.emailInput = React.createRef();\r\n        this.passwordInput = React.createRef();\r\n        this.confirmPasswordInput = React.createRef();\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.generateID = this.generateID.bind(this);\r\n    }\r\n    \r\n    generateID() {\r\n        let id = Math.floor(100000 + Math.random() * 900000);\r\n\r\n        return id;\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.passwordInput.current.value !== this.confirmPasswordInput.current.value) {\r\n            this.setState({error: 'The passwords mismatch'})\r\n            return;\r\n        }\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword(this.emailInput.current.value, this.passwordInput.current.value)\r\n        .then(function() {\r\n            this.setState({success: 'You have signed up successfully'});\r\n\r\n            firestore.collection('users').doc(firebase.auth().currentUser.uid).set({\r\n                id: this.generateID(),\r\n                email: this.emailInput.current.value\r\n            });\r\n        }.bind(this))\r\n        .catch(function(error) {\r\n            this.setState({error: error.message});\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"register\">\r\n                <form className=\"register__form\" onSubmit={this.handleSubmit}>\r\n                    <WhatsApp className=\"register__form-logo\"/>\r\n                    {this.state.error ? (<Alert severity=\"error\">{this.state.error}</Alert>) : null}\r\n                    {this.state.success ? (<Alert severity=\"success\">{this.state.success}</Alert>) : null}\r\n                    <div className=\"register__form-input\">\r\n                        <AlternateEmail />\r\n                        <input ref={this.emailInput} type=\"email\" placeholder=\"Email\" required></input>\r\n                    </div>\r\n                    <div className=\"register__form-input\">\r\n                        <Lock />\r\n                        <input ref={this.passwordInput} type=\"password\" placeholder=\"Password\" required></input>\r\n                    </div>\r\n                    <div className=\"register__form-input\">\r\n                        <Lock />\r\n                        <input ref={this.confirmPasswordInput} type=\"password\" placeholder=\"Confirm password\" required></input>\r\n                    </div>\r\n                    <div id=\"recaptcha-container\"></div>\r\n                    <input className=\"register__form-submit\" type=\"submit\" value=\"SIGN UP\" />\r\n                    <Link className=\"register__form-more\" to=\"/LogIn\">I already have an account</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport './LogIn.scss';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { ArrowBack, AlternateEmail, Lock, WhatsApp } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport firebase from 'services/firebase';\r\n\r\nclass LogIn extends Component {\r\n    state = {}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.emailInput = React.createRef();\r\n        this.passwordInput = React.createRef();\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const emailInput = this.emailInput.current;\r\n        const passwordInput = this.passwordInput.current;\r\n\r\n        firebase.auth().signInWithEmailAndPassword(emailInput.value, passwordInput.value)\r\n        .catch(function(error) {\r\n            this.setState({error: error.message});\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <motion.div className=\"login\" initial={{x: -100+\"vw\"}} animate={{x: 0, transition: {duration: 1}}}>\r\n                <Link className=\"login__return\" to=\"/\"><ArrowBack /></Link>\r\n                <form className=\"login__form\" onSubmit={this.handleSubmit}>\r\n                    <WhatsApp className=\"login__form-logo\"/>\r\n                    {this.state.error ? (<Alert severity=\"error\">{this.state.error}</Alert>) : null}\r\n                    <div className=\"login__form-input\">\r\n                        <AlternateEmail />\r\n                        <input ref={this.emailInput} type=\"text\" placeholder=\"Email\" required></input>\r\n                    </div>\r\n                    <div className=\"login__form-input\">\r\n                        <Lock />\r\n                        <input ref={this.passwordInput} type=\"password\" placeholder=\"Password\" required></input>\r\n                    </div>\r\n                    <a className=\"login__form-more\" href=\"#\">Forgot password ?</a>\r\n                    <input className=\"login__form-submit\" type=\"submit\" value=\"SIGN IN\" />\r\n                </form>\r\n            </motion.div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogIn;","import React, { Component } from 'react';\r\nimport 'components/Contact.scss';\r\nimport { Avatar } from '@material-ui/core';\r\nimport {useHistory} from \"react-router\";\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.select = this.select.bind(this);\r\n    }\r\n\r\n    select() {\r\n        this.props.history.push(`/contacts/${this.props.uid}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"contact\" onClick={this.select}>\r\n                <Avatar/>\r\n                <div style={{marginLeft: 0.5+\"rem\"}}>\r\n                    <h1 className=\"contact__name\">{this.props.name || \"New contact\"}</h1>\r\n                    <p className=\"contact__description\">The last message sent goes here</p>\r\n                </div>\r\n                <p className=\"contact__time\">12:00:50</p>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n \r\nexport default (props) => <Contact {...props} history={useHistory()}/>;","import React, { Component } from 'react';\r\nimport 'components/SideBar.scss';\r\n//#region Icons\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Add, ArrowBack, ExitToApp, Save, Face, Dialpad } from '@material-ui/icons';\r\n//#endregion\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\nimport firebase, { firestore } from 'services/firebase';\r\nimport Contact from \"./Contact\";\r\n\r\nclass SideBar extends Component {\r\n    state = {}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.newContactName = React.createRef();\r\n        this.newContactID = React.createRef();\r\n        this.searchBar = React.createRef();\r\n\r\n        this.newContact = this.newContact.bind(this);\r\n        this.searchContact = this.searchContact.bind(this);\r\n        this.state = {\r\n            contacts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        firestore.collection(\"users\").doc(firebase.auth().currentUser.uid).collection(\"contacts\").get()\r\n            .then(function(querySnapshot) {\r\n                let contacts = [];\r\n                querySnapshot.forEach(function(doc) {\r\n                    contacts.push(doc.data());\r\n                });\r\n                this.setState({\r\n                    contacts: contacts\r\n                });\r\n            }.bind(this));\r\n    }\r\n\r\n    disconnect() {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    newContact(event) {\r\n        event.preventDefault();\r\n\r\n        const contactName = this.newContactName.current.value;\r\n        const contactID = this.newContactID.current.value;\r\n\r\n        firestore.collection(\"users\").where(\"id\", \"==\", parseInt(contactID)).get()\r\n        .then(function(querySnapshot) {\r\n            if (!querySnapshot.empty) {\r\n                if (querySnapshot.docs[0].id === firebase.auth().currentUser.uid) {\r\n                    this.setState({error: 'You can\\'t add yourself as a contact dumbass', success: undefined});\r\n                    return;\r\n                }\r\n\r\n                firestore.collection(\"users\").doc(firebase.auth().currentUser.uid).collection(\"contacts\").doc(contactID).set({\r\n                    name: contactName,\r\n                    user: querySnapshot.docs[0].ref\r\n                });\r\n\r\n                this.setState({success: 'Contact successfully added'});\r\n            } else {\r\n                this.setState({error: 'User not found, please verify the ID entered', success: undefined});\r\n            }\r\n        }.bind(this))\r\n        .catch(function(reason) {\r\n            this.setState({error: reason, success: undefined});\r\n        }.bind(this));\r\n    }\r\n\r\n    searchContact() {\r\n        document.querySelectorAll(\".contact\").forEach(element => {\r\n            const name = element.querySelector(\".contact__name\").innerHTML;\r\n\r\n            if (name.toLowerCase().includes(this.searchBar.current.value.toLowerCase())) {\r\n                element.classList.remove(\"contact-hide\");\r\n            } else {\r\n                element.classList.add(\"contact-hide\");\r\n            }\r\n        })\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"sidebar\">\r\n                <Switch>\r\n                    <Route path=\"/new\">\r\n                        <div className=\"sidebar__header\">\r\n                            <Link to=\"/\"><ArrowBack /></Link>\r\n                            <p>New contact</p>\r\n                            <div className=\"sidebar__header-options\">\r\n                                <button onClick={this.disconnect}><ExitToApp /></button>\r\n                            </div>\r\n                        </div>\r\n                        <form className=\"sidebar__content\" style={{padding: '0 2rem'}} onSubmit={this.newContact}>\r\n                            <div className=\"sidebar__content-avatar\">\r\n                                <Avatar />\r\n                            </div>\r\n                            {this.state.error ? (<Alert severity=\"error\">{this.state.error}</Alert>) : null}\r\n                            {this.state.success ? (<Alert severity=\"success\">{this.state.success}</Alert>) : null}\r\n                            <div className=\"sidebar__content-input\">\r\n                                <Face />\r\n                                <input ref={this.newContactName} type=\"text\" placeholder=\"Contact name\" required />\r\n                            </div>\r\n                            <div className=\"sidebar__content-input\">\r\n                                <Dialpad />\r\n                                <input ref={this.newContactID} type=\"text\" placeholder=\"XXXXXX\" required />\r\n                            </div>\r\n                            <button className=\"sidebar__content-option\" type=\"submit\">\r\n                                <Save />\r\n                            </button>\r\n                        </form>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <div className=\"sidebar__header\">\r\n                            <Avatar />\r\n                            <div className=\"sidebar__header-options\">\r\n                                <button onClick={this.disconnect}><ExitToApp /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sidebar__search\">\r\n                            <div className=\"sidebar__search-entry\">\r\n                                <input onChange={this.searchContact} ref={this.searchBar} type=\"text\" placeholder=\"Search a chat\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sidebar__content\">\r\n                            {this.state.contacts.map(contact => <Contact name={contact.name} uid={contact.user.id} key={contact.user.id}/>)}\r\n                            <Link className=\"sidebar__content-option\" to=\"/new\">\r\n                                <Add />\r\n                            </Link>\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n \r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport 'components/Conversation.scss';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport SentimentVerySatisfiedRoundedIcon from '@material-ui/icons/SentimentVerySatisfiedRounded';\r\nimport firebase, {firestore} from \"../services/firebase\";\r\nimport {useHistory} from \"react-router\";\r\nimport {ArrowBack} from \"@material-ui/icons\";\r\n\r\nclass Conversation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.message = React.createRef();\r\n        this.chatBox = React.createRef();\r\n\r\n        this.state = {\r\n            contact: [],\r\n            conversationId: undefined,\r\n            conversation: []\r\n        }\r\n\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get contact\r\n        firestore.collection(\"users\").doc(firebase.auth().currentUser.uid).collection(\"contacts\").get()\r\n            .then(function(querySnapshot) {\r\n                let contact;\r\n                querySnapshot.forEach(doc => {\r\n                    if (doc.data().user.id == this.props.match.params.uid) contact = doc;\r\n                })\r\n\r\n                if (contact) {\r\n                    this.setState({contact: contact});\r\n                } else {\r\n                    this.props.history.goBack();\r\n                }\r\n            }.bind(this));\r\n\r\n        // Get conversation and retrieve changes\r\n        firestore.collection(\"conversations\")\r\n            .where(\"participants\", \"array-contains-any\", [firebase.auth().currentUser.uid, this.props.match.params.uid])\r\n            .onSnapshot(function(querySnapshot) {\r\n                this.setState({\r\n                    conversationId: querySnapshot.docs[0].id,\r\n                    conversation: querySnapshot.docs[0].data()\r\n                });\r\n                this.chatBox.current.scrollTo(0, this.chatBox.current.scrollHeight);\r\n            }.bind(this));\r\n    }\r\n\r\n    sendMessage(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.message.current.value === \"\") return;\r\n\r\n        this.state.conversation.messages.push({\r\n            content: this.message.current.value,\r\n            from: firebase.auth().currentUser.uid,\r\n            date: Date.now()\r\n        });\r\n        firestore.collection(\"conversations\").doc(this.state.conversationId).set(this.state.conversation);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"conversation\">\r\n                <div className=\"conversation__header\">\r\n                    <Avatar />\r\n                    <h1 className=\"conversation__header-title\">{this.state.contact.name || \"New contact\"}</h1>\r\n                    <button className=\"conversation__header-back\" onClick={() => this.props.history.goBack()}><ArrowBack /></button>\r\n                </div>\r\n                <div ref={this.chatBox} className=\"conversation__chat\">\r\n                    {this.state.conversation.messages && this.state.conversation.messages.map(message => (\r\n                        <div className={`conversation__chat-message ${message.from == firebase.auth().currentUser.uid ? \"me\" : \"\"}`}>\r\n                            <Avatar />\r\n                            <div className=\"conversation__chat-messageContent\">\r\n                                <p>{message.content}</p>\r\n                                <div className=\"conversation__chat-messageFooter\">\r\n                                    <span className=\"conversation__chat-messageTime\">{new Date(message.date).toLocaleTimeString()}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <form className=\"conversation__footer\" onSubmit={this.sendMessage}>\r\n                    <div className=\"conversation__footer-entry\">\r\n                        <input ref={this.message} type=\"text\" placeholder=\"Type your message\" />\r\n                    </div>\r\n                    <button type=\"submit\"><SendRoundedIcon /></button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default (props) => <Conversation {...props} history={useHistory()} />;","import React, { Component } from 'react';\r\nimport './Main.scss';\r\nimport SideBar from 'components/SideBar';\r\nimport Conversation from 'components/Conversation';\r\nimport {Route} from \"react-router\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <SideBar />\r\n                <div className=\"main__content\">\r\n                    <Route path=\"/contacts/:uid\" component={Conversation} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Register from 'screens/Register';\r\nimport LogIn from 'screens/LogIn';\r\nimport Main from 'screens/Main';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport firebase from 'services/firebase';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            this.setState({user: user});\r\n        }.bind(this));\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"app\">\r\n                <Router>\r\n                    <AnimatePresence>\r\n                        <Route path=\"/\">\r\n                        {this.state.user ? (\r\n                            <Main />\r\n                        ) : (\r\n                            <>\r\n                            <Register />\r\n                            <Route path=\"/login\" component={LogIn} />\r\n                            </>\r\n                        )}\r\n                        </Route>\r\n                    </AnimatePresence>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}